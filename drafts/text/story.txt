Maybe this can be a story book? 

Like what if we would have one or two characters who would
need to learn programming somehow? Do you know these animation
series like Pin-Code? Maybe we could teach people, and children 
how do computers work, and how to code through a narrative story?

This would potentially make the learning curve more entertaining and
interesting while maintaining the text informative and usefull.

But how can we make that happen?

My intuition is feeling that these 
things might help me to get started:
- Create some characters
- Think about conflict
- How would new topics be introduced
- Why would the audience care

---

untitled_story
- Main character meets a robot
- Robot doesn't know how does he work
- Main character will need to help the robot to fix him.
- At the beginning, main character will be learning
  about how the Robot works, and how to code it
  from others, and later on, when he will know the way,
  he will have a friend, and now we can introduce new
  concepts for teamworking like git, styles, and more.
  Then we can include other things into the story, 
  expanding Bob's and his Robot's world.

untitled_story_2
- There are several characters living in the house
- Each character is unique...

untitled_story_3
- There is a secret organization
- Bob is being able to contact them
- Bob needs to learn programming to help them

untitled_story_4
- ...

---

Gathering Ideas and Tips from GPT 3.5

I don't really understand, how teaching part should
be included into the story, and how should it work.
Can you please give me some ideas please?

Here are things to think about:
- Character development
  - Make likable charcter, with each having own personality
- Conflicts and Motivation
  - Maybe helping a robot from untitled_story would be a motivation
- Learning through problem solving
  - Show obstacles, which require skills to overcome
- Tutorials and Explanations
  - Integrate short, informative sections maybe from one character
  - Use simple and relatable examples and illustrate concepts
- Progression
  - As the story unfolds, characters can progress in various ways
  - Gradually introduce new obstacles, and more advanced concepts
- Interactive elements
  - Include exercises / puzzles
  - Readers can try hand at coding together with characters
- Visualization
- Real-World Applications
  - Show how concepts are used in the real world examples
- Repetition and Practice
- Emotional Connection
- Feedback and Assessment

---

Should just just be another boring lecture-type studies?
Or is there any other way of doing all this?

Let's disscuss about writing styles:
- Tutorial-based
  + Easy to follow
  + You know what you'll learn
  + Official and neat
  - Might be boring
  - Overused by everyone
  - No Personal Connection
  - Doesn't have the full picture
- Course-type
  + Easy to follow
  + Have the full picture
  + A bit of personal connection with audience
  - Might be boring
  - Overused by everyone
- Cognise-styled
  + Engaging
  + Easier to learn
  + More personal connection with audience
  + You know what you'll learn
  + Unique
  - Non-Official
- Narrative-styled
  + Engaging
  + Easy to learn
  + More personal connection with audience
  + Excitement for the new part
  + Unique
  - Non-Official
  - Might involve way too much of 
    narrative stills & planning
  - Learning curve is blured

---

Some possible sources of inspiration
- Smeshariki, Pin-Code
- Kognise, Putting "you" in CPU: https://cpu.land/
- Chevostic book series
- Fixiki

---

Maybe we can combine few of these styles?

Every chapter of the website will have a topic,
which I would be explaining in a Kognise style,
and include an imaginary scenarios with narrative?
Or would it be better to have a goal, and something 
like a story, and I will be something like a secondary 
character, or the background voice, which will explain
different topics to the main character,  and reader.

hypothetical_scenario
- Each chapter have a topic
- A topic will be introduced first. Some problem.
- Then throughout the chapter, we will be exploring
  the ways to solve these problems.

- Exaple:
  - Introduction
  - What problem does this element solve
  - How does it work
  - ...

---