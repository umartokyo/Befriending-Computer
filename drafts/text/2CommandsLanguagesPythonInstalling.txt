Plan:
+ What is a language for a computer?
+ Different levels of languages
+ Why Python
+ Where to install & download it

Commands
+ Say that code consists of commands which we give to the computer
+ Talk about scenario
+ Give an example of Commands

---

Commands:

Before starting to code, we meed to understand few basic concepts, through which we will go right now:
For computer to do something, you need to feed it an instruction / command. Sets of instructions are called a program. 
Imagine that you're cooking something and following some recipe. Each action of the recipe will be an instruction, and the recipe itself will be a program, which you - computer will be executing.
! Let's remember that the computer will execute all the instructions we give him from top to bottom.

Languages:

But how does computer understand instruction we give him? We can't just talk English to computer, and expect it to do something right? 
In the early days of programming, known as the "dark ages," programmers had to use binary-based programming languages to write code. These languages were very low-level and required a deep understanding of how computers worked at a hardware level.
Here's some code I have "borrowed" from https://onecompiler.com/assembly/3xzwgbnj6, which adds two numbers: 
[Before looking at this: This is just a exhibit. You won't deal with this kind of code inhere.]
"Some code"

Pretty easy, hah? ðŸ˜…

Due to unimaginable complexity of coding, some smart people lile [Grace Hopper], programming languages emerged. They significantly simplified the job of coders, and allowed to talk with computers in a more humane way. 
While talking about programming languages, you might often hear people disscussing 'bout their levels (high level, low lever), and shortly, as lower the level of programming language is, as closer you are to the hardware, and binary code which you just saw. On the other hand, higher level programming languages abstract the system, so you can create programs without worrying about hardware of the device.
^Higher & Lower programming languages drawing^

---

Python

Python have been one of the most popular languages out there lately, and there is a reason for it. It's a high-level programming language that was created by Guido Van in 1989.
It's known by it's simplicity, versatility and most importantly, a broud and kind user community. The code in python is easy to write, and you don't need to worry about things like garbage collectors. 
Python is loved and used by programmers for applications like machine learning, data analysis, scientific computing, simple games, bots, chrome extensions, and even web and mobile apps and more.
Community of users often contribute to python developers by craeting libraries, frameworks, tools and tutorials that make it easier for beginner and experts to learn and explore the whole potential of this language.
We will definitely learn this language because due to all these reasons, and not because I'm most comfortable with it.

Do you remember ther example of adding two numbers? This is the code which does the same thing but written in python:
"""
num1 = int(input("Num1: "))
num2 = int(input("Num2: "))

print(f"Result: {num1 + num2}")
"""
Pretty easy, hah? ðŸ˜Ž

If you've heard that python is slow, you're right. But you know what else is slow? The learning speed of a person learning C++. (Okay, I admit maybe this joke wasn't that funny, and my appologies to all C++ users.)

Python is a high-level programming language that was created by Guido van
Rossum in 1989. It's known for its readability, as the code can be written
and understood easily with its clean syntax and structure. Python is 
dynamically typed, interpreted, and object-oriented. 

One of the reasons 
people use Python is because it's versatile; it can be used to develop web
applications, mobile apps, scientific computing, data analysis, artificial
intelligence, machine learning, and more. 

community of users who contribute to its development by creating 
libraries, frameworks, tools, and tutorials that make it easier for 
beginners to learn and experts to explore new possibilities with the 
language. Python is a popular choice among developers because it's easy to
learn, powerful, efficient, and widely used in many industries today.

I've seen some many people start their programming journey through C languages, because the

What kind of instruction 

Unlike humans, computers need straight and clear instructions to follow

Installing python

There are many online tutorials on how you can install python on your computer depending on your os. I will assume that you already know how to download apps from online, so here's a link:
https://www.python.org/downloads/
But it you don't know how to do it, or running into some error -> google it! Yeah, just google it! 

Don't worry, there are no viruses there ðŸ‘¾

---

Commands Theory

Before starting to code, we meed to understand few basic concepts, through which we will go right now:
For computer to do something, you need to feed it an instruction / command. Sets of instructions are called a program. 
Imagine that you're cooking something and following some recipe. Each action of the recipe will be an instruction, and the recipe itself will be a program, which you - computer will be executing.
! Let's remember that the computer will execute all the instructions we give him from top to bottom. 

+

Languages

But how does computer understand instruction we give him? We can't just talk English to computer, and expect it to do something right? 
In the early days of programming, known as the "dark ages," programmers had to use binary-based programming languages to write code. These languages were very low-level and required a deep understanding of how computers worked at a hardware level.
Here's some code I have "borrowed" from https://onecompiler.com/assembly/3xzwgbnj6, which adds two numbers: 
[Before looking at this: This is just a exhibit. You won't deal with this kind of code inhere.]
"Some code"

Pretty easy, hah? ðŸ˜…

Due to unimaginable complexity of coding, some smart people lile [Grace Hopper], programming languages emerged. They significantly simplified the job of coders, and allowed to talk with computers in a more humane way. 
While talking about programming languages, you might often hear people disscussing 'bout their levels (high level, low lever), and shortly, as lower the level of programming language is, as closer you are to the hardware, and binary code which you just saw. On the other hand, higher level programming languages abstract the system, so you can create programs without worrying about hardware of the device.
^Higher & Lower programming languages drawing^

+

Python

Python have been one of the most popular languages out there lately, and there is a reason for it. It's a high-level programming language that was created by Guido Van in 1989.
It's known by it's simplicity, versatility and most importantly, a broud and kind user community. The code in python is easy to write, and you don't need to worry about things like garbage collectors. 
Python is loved and used by programmers for applications like machine learning, data analysis, scientific computing, simple games, bots, chrome extensions, and even web and mobile apps and more.
Community of users often contribute to python developers by craeting libraries, frameworks, tools and tutorials that make it easier for beginner and experts to learn and explore the whole potential of this language.
We will definitely learn this language because due to all these reasons, and not because I'm most comfortable with it.

Do you remember ther example of adding two numbers? This is the code which does the same thing but written in python:
"""
num1 = int(input("Num1: "))
num2 = int(input("Num2: "))

print(f"Result: {num1 + num2}")
"""
Pretty easy, hah? ðŸ˜Ž

+

Installing Python

There are many online tutorials on how you can install python on your computer depending on your os. I will assume that you already know how to download apps from online, so here's a link:
https://www.python.org/downloads/
But it you don't know how to do it, or running into some error -> google it! Yeah, just google it! 